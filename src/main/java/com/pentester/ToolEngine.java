package com.pentester;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javax.xml.XMLConstants;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import java.io.File;
import java.io.IOException;

public class ToolEngine
{
	private final String directory;
	private final ObservableList<Tool> tools = FXCollections.observableArrayList();
	private final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();

	public ToolEngine(String directory)
	{
		this.directory = directory;
	}

	public ObservableList<Tool> loadTools()
	{
		File toolsFolder = new File(directory);
		File[] files = toolsFolder.listFiles((dir, name)-> name.toLowerCase().endsWith(".xml"));
		
		try
		{
			for (File file : files) {
				dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
				DocumentBuilder db = dbf.newDocumentBuilder();
				Document doc = db.parse(file.getAbsolutePath());
				doc.getDocumentElement().normalize();

				NodeList toolList = doc.getElementsByTagName("Tool");
				NodeList description = doc.getElementsByTagName("Description");

				Element descriptionElement = (Element) description.item(0);
				Element toolElement = (Element) toolList.item(0);

				String toolCategory = toolElement.getAttribute("category");
				String toolName = toolElement.getAttribute("name");
				String toolPath = toolElement.getAttribute("path");
				String toolDesc = descriptionElement.getTextContent().trim();

				tools.add(new Tool(toolName, toolPath, toolCategory, toolDesc));

				NodeList optionList = toolElement.getChildNodes();

				for (int i = 0; i < optionList.getLength(); i++) {
					Node optionNode = optionList.item(i);

					if (optionNode.getNodeType() == Node.ELEMENT_NODE) {
						Element optionElement = (Element) optionNode;
						Option opt = new Option();

						opt.type = optionElement.getAttribute("OptionType");
						opt.name = optionElement.getAttribute("OptionName");
						opt.command = optionElement.getAttribute("OptionCommand");

						tools.get(tools.size() - 1).addOption(opt);
					}
				}
			}
		}
		catch (ParserConfigurationException | SAXException | IOException | NullPointerException e)
		{
			e.printStackTrace();
		}

		return tools;
	}
}
